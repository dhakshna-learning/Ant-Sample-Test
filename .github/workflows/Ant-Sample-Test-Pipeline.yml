name: Application Release Pipeline

on:
  workflow_dispatch:  
    inputs:
      Action:
        description: 'Please choose the Ant Target:'
        required: true
        type: choice
        options:
          - build
          - compile
          - test
      Environment:
        required: true
        type: choice
        options:
          - Tst
          - QA
          - Drmt
          - Live
      jira_ref:
        description: "Please mention the Jira ID for the release initiation (Mention if you're implementing the build and deployment on REG/PRL/PRD)"
        required: true
        type: string
      Promote2tst:
        description: "Promote to QA?"
        required: true
        type: boolean
      Promote2drmt:
        description: "Promote to Dormant?"
        required: true
        type: boolean
      Promote2live:
        description: "Promote to Live?"
        required: true
        type: boolean
      Debug:
        description: "Enable debug logs?"
        required: false
        type: boolean       

permissions:
  id-token: write  
  contents: read
  issues: write

jobs:
  basic-checks:
    name: Basic Validations
    runs-on: ubuntu-latest
    environment: ${{ inputs.Environment }}
    outputs:
      devops_ids: ${{ steps.fetch_approvers.outputs.devops_ids }}
    steps:
      - name: Validate Inputs
        env:
          ENVIRONMENT: ${{ inputs.Environment }}
          JIRA_REF: ${{ inputs.jira_ref }}
          BRANCH: ${{ github.ref }}
        run: |
          branch_check() {
            if [ "$ENVIRONMENT" == "Live" ] && [ "$BRANCH" != "refs/heads/master" ]; then
              echo "❌ Deployments to LIVE are only allowed from master branch."
              exit 1
            elif [ "$ENVIRONMENT" == "Drmt" ] && [ "$BRANCH" != "refs/heads/master" ]; then
              echo "❌ Deployments to DRMT are only allowed from master branch."
              exit 1
            elif [ "$ENVIRONMENT" == "Tst" ] && [ "$BRANCH" != "refs/heads/master" ]; then
              echo "❌ Deployments to TST are only allowed from master branch."
              exit 1
            elif [ "$ENVIRONMENT" == "Dev" ] && [[ ! "$BRANCH" =~ refs/heads/feat/.* ]]; then
              echo "❌ Deployments to DEV are only allowed from feature branches."
              exit 1
            else
              echo "✅ Branch validation passed."
            fi
          }

          branch_check

          # Jira check for non-Dev
          if [ "$ENVIRONMENT" != "Dev" ] && { [ -z "$JIRA_REF" ] || [ "$JIRA_REF" == "null" ] || [ "$JIRA_REF" == "N/A" ] || [ "$JIRA_REF" == "na" ]; }; then
            echo "❌ Jira reference is required for environment $ENVIRONMENT."
            exit 1
          fi

          echo "✅ All inputs are valid."

      - name: Retrieve approver IDs
        id: fetch_approvers
        if: ${{ inputs.Environment != 'Dev' }}
        uses: dhakshna-learning/ci-cd-automation/.github/actions/get-ids@master
        with:
          branch: ${{ github.ref }}
          debug: ${{ inputs.Debug }}

  Snyk-Test:
    name: Snyk Scan Artifacts
    needs: basic-checks
    uses: dhakshna-learning/ci-cd-automation/.github/workflows/snyk.yml@master
    with:
      environment: ${{ inputs.Environment }}
      branch: ${{ github.ref }}
    secrets: inherit

  CI-Build:
    name: Application Build Pipeline
    needs: [basic-checks, Snyk-Test]
    uses: dhakshna-learning/ci-cd-automation/.github/workflows/ant-build.yml@master
    with:
      ant_target: ${{ inputs.Action }}
      environment: ${{ inputs.Environment }}
      branch: ${{ github.ref }}
      jira_ref: ${{ inputs.jira_ref }}
      debug: ${{ inputs.Debug }}
      approvers: ${{ needs.basic-checks.outputs.devops_ids }}
    secrets: inherit

  CD-Deployment:
    name: Application Deployment Pipeline
    needs: [basic-checks, Snyk-Test, CI-Build]
    uses: dhakshna-learning/ci-cd-automation/.github/workflows/ant-deployment.yml@master
    with:
      environment: ${{ inputs.Environment }}
      jira_ref: ${{ inputs.JIRA_REF }}
      issue_number: ${{ needs.CI-Build.outputs.issue_number }}
      approvers: ${{ needs.basic-checks.outputs.devops_ids }}
    secrets: inherit
